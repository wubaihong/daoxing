<?php

namespace common\models\article;

use Yii;
use BaconQrCode\Common\Mode;
use common\models\Post;
use common\enums\WhetherEnum;
use common\helpers\TreeHelper;
use common\enums\StatusEnum;
use yii\base\Model;
use common\models\article\Article;
use yii\data\ActiveDataProvider;

/**
 * This is the model class for table "rf_common_menu_cate".
 *
 * @property int $id 主键
 * @property string $content 标题
 * @property int $sort 排序

 * @property int $status 状态[-1:删除;0:禁用;1启用]
 * @property string $created_at 添加时间
 * @property string $updated_at 修改时间
 */
class ArticleSearch extends Article
{
    /**
     * {@inheritdoc}
     */
    public function attributes()
    {
        $new= array_merge(parent::attributes(),['subject_title','circle_title','username']); // TODO: Change the autogenerated stub
      //  dd($new);
        return $new;
    }
    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['read_count', 'discuss_count', 'likes_count', 'reply_count','collect_count','topping','circle_id','subject_id','sort', 'status', 'created_at', 'updated_at'], 'integer'],
            [['circle_title', 'subject_title', 'content','username'], 'safe'],
        ];
    }

    public function scenarios()
    {
        return Model::scenarios();
    }


    public function search($params,$pageSize){
        $query = Article::find()->alias('a');
        $query->select('`a`.*,`a`.id as article_id,`dx_ar_circle`.title as circle_title,`dx_member`.username as username, `dx_ar_subject`.title as subject_title');
        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => ['pageSize'=>$pageSize],
            'sort'=>[
                'defaultOrder'=>[
                    'id'=>SORT_DESC,
                ],
                'attributes'=>['id','sort','read_count','discuss_count','likes_count','reply_count','collect_count','topping'],
            ],
        ]);

        $this->load($params);
        if (!$this->validate()) {
            return $dataProvider;
        }
        $query->andFilterWhere([
            'a.id' => $this->id,
            'a.status' => $this->status,
            'a.created_at' => $this->created_at,
            'a.updated_at' => $this->updated_at,
            'a.user_id' => $this->user_id,
        ]);
        $query->join('INNER JOIN','dx_member','a.user_id = dx_member.id');
        $query->join('LEFT JOIN','dx_ar_circle','a.circle_id = dx_ar_circle.id');
        $query->join('LEFT JOIN','dx_ar_subject','a.subject_id = dx_ar_subject.id');
        $query->andFilterWhere(['like', 'content', $this->content]);
        $query->andFilterWhere(['like','dx_member.username',$this->username]);
        $query->andFilterWhere(['like','dx_ar_circle.title',$this->circle_title]);
        $query->andFilterWhere(['like','dx_ar_subject.title',$this->subject_title]);
        return $dataProvider;
    }

}
