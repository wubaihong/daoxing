<?php

namespace common\models\article;

use common\models\member\Member;
use common\models\Poststatus;
use Yii;
use common\enums\WhetherEnum;
use common\helpers\TreeHelper;
use common\enums\StatusEnum;

/**
 * This is the model class for table "rf_common_menu_cate".
 *
 * @property int $id 主键
 * @property string $content 标题
 * @property int $sort 排序
 * @property string $pid 上级id
 * @property int $status 状态[-1:删除;0:禁用;1启用]
 * @property string $created_at 添加时间
 * @property string $updated_at 修改时间
 */
class Discuss extends \common\models\base\BaseModel
{

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%ar_article}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['content', 'images', 'video'], 'atLeastOne'],
            [['read_count', 'discuss_count', 'likes_count', 'reply_count', 'collect_count', 'topping', 'circle_id', 'subject_id', 'sort', 'status', 'created_at', 'updated_at'], 'integer'],
            [['content'], 'string', 'max' => 900],
            [['images','video_cover'], 'file','extensions' => ['png', 'jpg', 'gif'], 'maxSize' => 1024*1024*1024],
            [['video'], 'file','extensions' => ['rm', 'rmvb', 'wmv', 'avi', 'mpg', 'mpeg', 'mp4'],],
        ];
    }
//    public function attributes()
//    {
//        return parent::attributes(); // TODO: Change the autogenerated stub
//    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'content' => '内容',
            'images' => '图片',
            'video' => '视频',
            'video_cover' => '视频封面',
            'username' => '作者',
            'circle_title' => '圈子',
            'subject_title' => '话题',
            'read_count' => '阅读量',
            'discuss_count' => '评论量',
            'likes_count' => '点赞量',
            'reply_count' => '转发量',
            'collect_count' => '收藏量',
            'topping' => '置顶',
            'circle_id' => '圈子id',
            'subject_id' => '主题id',
            'user_id' => '作者ID',
            'sort' => '排序',
            'status' => '状态',
            'created_at' => '创建时间',
            'updated_at' => '修改时间',
        ];
    }

    public function atLeastOne($attribute, $params)
    {
        $arr = [];
        array_push($arr, $this->content, $this->images, $this->video);
        //dd(strlen($this->images),$arr);
        $boolean = false;
        foreach ($arr as $k => $v) {
            if (!empty($v)) {
               if(strlen($v)<3){
                   $new=str_replace('"','',$v);
                   if(!empty($new)){
                       $boolean = true;
                   }
               } else{
                   $boolean = true;
               }

            }
        }
        if ($boolean == false) {
            $this->addError($attribute, "不能文字、图片、视频都为空！");
        }
    }
    /**
     * @param bool $insert
     * @return bool
     */
//    public function beforeSave($insert)
//    {
//        if ($this->isNewRecord) {
//            $this->pid == 0 && $this->tree = TreeHelper::defaultTreeKey();
//        }
//
//        return parent::beforeSave($insert);
//    }

    public function getAuthor(){
        return $this->hasOne(Member::className(), ['id' => 'user_id']);
    }

    public function getCircle(){
        return  $this->hasOne(Circle::className(), ['id' => 'circle_id']);
    }

    public function getSubject(){
        return  $this->hasOne(Subject::className(), ['id' => 'subject_id']);
    }
}
